# Generated by Django 3.2.6 on 2021-12-06 12:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Stores the datetime when the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Stores the datetime when the object was last modified', verbose_name='modified at')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email address already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('is_client', models.BooleanField(default=True, help_text=('Helps easily distinguish users and perform queries.', 'Clients are the main type of user.'), verbose_name='client')),
                ('is_verified', models.BooleanField(default=False, help_text='Set to True when the user has verified their email address.', verbose_name='verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('-created', '-modified'),
                'get_latest_by': 'created',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Stores the datetime when the object was created.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Stores the datetime when the object was last modified', verbose_name='modified at')),
                ('picture', models.ImageField(blank=True, help_text='User profile picture.', null=True, upload_to='users/pictures/', verbose_name='picture')),
                ('biography', models.TextField(blank=True, help_text='User profile biography.', max_length=250, null=True, verbose_name='biography')),
                ('followers_quantity', models.IntegerField(default=0, help_text=('Quantity of followers of this user.Stores the value to perform less queries.Increase 1 when another user begins to follow this user.',), verbose_name='quantity of followers')),
                ('following_quantity', models.IntegerField(default=0, help_text=('Quantity of users that this user is following.', 'Stores the value to perform less queries.Increase 1 when this user begins to follow another user.'), verbose_name='quantity of following')),
                ('followers', models.ManyToManyField(related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('following', models.ManyToManyField(related_name='following', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created', '-modified'),
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
    ]
